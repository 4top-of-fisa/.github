name: Reusable CI/CD Workflow for Frontend

on:
  workflow_call:
    inputs:
      docker-image-name:
        required: true
        type: string
      docker-port:
        required: true
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      EC2_HOST:
        required: true
      EC2_USER:
        required: true
      EC2_SSH_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Debug - check commit and page.tsx content
        run: |
          git log -1
          echo "--- page.tsx ---"
          cat app/page.tsx || echo "파일 없음"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.12.0

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker Build & Push
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.docker-image-name }} .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.docker-image-name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "[EC2] Pulling latest image and restarting container..."
            docker rm -f ${{ inputs.docker-image-name }} || true
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.docker-image-name }} || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.docker-image-name }}
            docker run -d --name ${{ inputs.docker-image-name }} -p ${{ inputs.docker-port }}:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.docker-image-name }}
